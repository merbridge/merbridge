name: Merbridge CI

on:
  push:
    branches: [ main, ambient ]
  pull_request:
    branches: [ main, ambient ]

jobs:
  style-check:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19
    - name: golangci-lint
      if: github.event_name == 'pull_request'
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.64.5
    - name: install clang-format
      run: sudo apt update && sudo apt install -y clang-format
    - name: Code check
      run: make lint-c
    - name: Helm check
      run: make helm-ci
  go-unit-test:
    runs-on: ubuntu-20.04
    needs: [style-check]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19
    - name: Test
      run: go test -v -coverprofile=coverage.txt ./...
    - uses: codecov/codecov-action@v3.1.4
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./coverage.txt # optional
        flags: unittests # optional
        name: codecov-umbrella # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
  compile-ebpf-test:
    runs-on: ubuntu-20.04
    needs: [style-check]
    steps:
    - uses: actions/checkout@v4
    - name: make
      run: make compile
  docker-build:
    runs-on: ubuntu-latest
    needs: [compile-ebpf-test, go-unit-test]
    if: github.ref_name == 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/merbridge/merbridge
            merbridge/merbridge
          tags: |
            type=raw,value=latest

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  docker-build-ambient:
    runs-on: ubuntu-latest
    if: github.ref_name == 'ambient'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/merbridge/merbridge
            merbridge/merbridge
          tags: |
            type=raw,value=ambient

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
